package com.najasoftware.fdv.activity;

import android.content.Intent;
import android.os.Bundle;
import android.support.design.widget.FloatingActionButton;
import android.support.v7.app.ActionBar;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.Spinner;

import com.najasoftware.fdv.FdvApplication;
import com.najasoftware.fdv.R;
import com.najasoftware.fdv.dao.CidadeDAO;
import com.najasoftware.fdv.dao.ClienteDAO;
import com.najasoftware.fdv.dao.UfDAO;
import com.najasoftware.fdv.helper.CadClienteHelper;
import com.najasoftware.fdv.model.Cidade;
import com.najasoftware.fdv.model.Cliente;
import com.najasoftware.fdv.model.Uf;
import com.najasoftware.fdv.util.Util;

import java.util.List;

public class CadClienteActivity extends BaseActivity {

    List<Cidade> cidades;
    private CadClienteHelper cadClienteHelper;
    private Cliente cliente;
    private String tipo = "novo";
    private Spinner comboUF;
    private Spinner comboCidade;
    private EditText fieldNameFantasia;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_cad_cliente);
        setUpToolBar();

        cadClienteHelper = new CadClienteHelper(this);
        FdvApplication app = FdvApplication.getInstance();

        //Adiciona upNavigation (botão voltar) na action bar
        ActionBar actionBar = getSupportActionBar();
        actionBar.setDisplayHomeAsUpEnabled(true);
        actionBar.setTitle("Cadastro de Cliente");


        ImageView appBarImg = (ImageView) findViewById(R.id.appBarImgCliente);
        //Picasso.with(getContext()).load(produto.getUrlFoto()).into(appBarImg);
        appBarImg.setImageResource(R.drawable.clientesfidelizados);

        //Pegando paramentro passado pela view anterior.
        cliente = app.getCliente();

        if (cliente != null) {
            tipo = "editar";
            EditText fieldCnpj = (EditText) findViewById(R.id.etCnpj);
            fieldCnpj.setEnabled(false);
            //fieldCnpj.setFocusableInTouchMode(false);
            cadClienteHelper.preecherActivity(cliente);
            actionBar.setTitle(cliente.getNomeFantasia());
        }

        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fabSalvaCliente);
        fab.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                boolean b = salvarCliente();
                if (b) {
                    toast("Cliente salvo com sucesso");
                    finish();
                } else {
                    toast("Erro ao salvar cliente");
                }
            }
        });


        findViewById(R.id.fab_add_location).setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                toast("Aguarde....");
                Intent intent = new Intent(CadClienteActivity.this, ClienteLocationActivity.class);
                startActivity(intent);
            }
        });

        final EditText etCnpj = (EditText) findViewById(R.id.etCnpj);
        final EditText etNomeFantasia = (EditText) findViewById(R.id.etNomeFantasia);

        etNomeFantasia.setOnFocusChangeListener(new View.OnFocusChangeListener() {
            @Override
            public void onFocusChange(View v, boolean hasFocus) {
                if (hasFocus == true) {
                    ClienteDAO clienteDAO = new ClienteDAO(CadClienteActivity.this);
                    Cliente cliente = clienteDAO.getCliente(etCnpj.getText().toString().trim());

                    if (tipo.equals("novo") && cliente != null) {
                        toast("Cliente já cadastrado!");
                        etCnpj.setText("");
                        etCnpj.setFocusable(true);
                        //etCnpj.setSelected(true);
                        //etCnpj.setEnabled(true);
                        //etCnpj.setActivated(true);
                        etCnpj.requestFocus();
                        //etNomeFantasia.clearFocus();
                    }
                }

            }
        });




        //Combo de uf
        comboUF = (Spinner) findViewById(R.id.comboUF);
        //Combo de cidades
        comboCidade = (Spinner) findViewById(R.id.comboCidade);
        comboUf(cliente);
    }

    private void comboUf(final Cliente cliente) {

        UfDAO ufDAO = new UfDAO(this);
        List<Uf> ufs = ufDAO.getUfs();
        //Adicionando um estado chamado UF na combo, para validar se o cliente escolheu um estado
        ufs.add(0, new Uf(Long.parseLong("0"), "", "UF"));

        ArrayAdapter adapter = new ArrayAdapter(this, android.R.layout.simple_spinner_dropdown_item, ufs);
        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        comboUF.setAdapter(adapter);

        //Se for uma edição o estado deve vir selecionado
        if (cliente != null) {
            boolean contem = false;
            int posicao = 0;

            Uf uf = cliente.getEnderecos().get(0).getCidade().getUf();
            contem = ufs.contains(uf);

            if (contem) {
                posicao = ufs.indexOf(uf);
            }
            if (posicao != 0) {
                comboUF.setSelection(posicao);
            }
        }

//        if (ufSigla != null){
//            for (int i = 0; i < comboUF.getCount(); i++) {
//                if(comboUF.getItemAtPosition(i).toString().equals(ufSigla)) {
//                    comboUF.setSelection(i);
//                    break;
//                }
//            }
//        }

        comboUF.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
            @Override
            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                Uf uf = (Uf) comboUF.getSelectedItem();
                CidadeDAO cidadeDAO = new CidadeDAO(getContext());
                cidades = cidadeDAO.getCidadePorEstado(uf.getId());
                cidades.add(0, new Cidade(Long.parseLong("0"), "Cidade", null));
                if (cidades != null) {
                    ArrayAdapter adapter = new ArrayAdapter(getContext(), android.R.layout.simple_spinner_dropdown_item, cidades);
                    adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
                    comboCidade.setAdapter(adapter);

                    //Se for uma edição aqui estamos posicionando na cidade a combo de cidade
                    if (cliente != null) {
                        boolean contem = false;
                        int posicao = 0;

                        Cidade cidade = cliente.getEnderecos().get(0).getCidade();
                        contem = cidades.contains(cidade);

                        if (contem) {
                            posicao = cidades.indexOf(cidade);
                        }
                        if (posicao != 0) {
                            comboCidade.setSelection(posicao);
                        }
                    }
                }
            }

            @Override
            public void onNothingSelected(AdapterView<?> parent) {

            }
        });

    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.menu_form_cliente_salvar, menu);
        return true;
    }


    public boolean onOptionsItemSelected(MenuItem item) {
        switch (item.getItemId()) {
            case R.id.menu_form_cliente_salvar:
                boolean b = salvarCliente();
                if (b) {
                    toast("Cliente salvo com sucesso");
                    finish();
                }
                break;
        }
        return false;
    }

    public boolean salvarCliente() {
        String msg = cadClienteHelper.validaCampos();

        //Se formulario validade com sucesso
        if (msg.equals("ok")) {

            //Cliente montado usando os dados do formulario
            Cliente c = cadClienteHelper.getCliente();

            ClienteDAO clienteDAO = new ClienteDAO(this);
            Util util = new Util();

            //Edicao
            if (tipo.equals("editar")) {
                c.setStatusFinanceiro(cliente.getStatusFinanceiro());
                c.setDtUltimaAlteracao(util.dataAtual());
                boolean update = clienteDAO.update(c);
                if (!update) return false;
            } else { //Novo cliente
                c.setStatusFinanceiro("B");
                c.setDtCadastro(util.dataAtual());
                c.setDtUltimaAlteracao(util.dataAtual());
                clienteDAO = new ClienteDAO(this);
                boolean salvo = clienteDAO.insere(c);
                if (!salvo) return false;
            }
        } else {
            toast(msg);
            return false;
        }
        return true;
    }
}
