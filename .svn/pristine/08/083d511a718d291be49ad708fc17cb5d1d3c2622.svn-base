package com.najasoftware.fdv.adapter;

import android.content.Context;
import android.support.v7.widget.CardView;
import android.support.v7.widget.RecyclerView;
import android.view.ContextMenu;
import android.view.LayoutInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

import com.najasoftware.fdv.R;
import com.najasoftware.fdv.model.Item;

import java.util.List;

/**
 * Created by Lemoel Marques - NajaSoftware on 11/04/2016.
 * lemoel@gmail.com
 */
public class ItemAdapter extends RecyclerView.Adapter<ItemAdapter.ItensViewHolder>{

    protected static final String TAG = "fdv";
    private final List<Item> itens;
    private final Context context;
    private ItemOnClickListener itemOnClickListener;

    public ItemAdapter(Context context, List<Item> itens, ItemOnClickListener itemOnClickListener) {
        this.context = context;
        this.itens = itens;
        this.itemOnClickListener = itemOnClickListener;
    }

    @Override
    public int getItemCount() {
        return this.itens != null ? this.itens.size() : 0;
    }

    @Override
    public ItensViewHolder onCreateViewHolder(ViewGroup viewGroup, int viewType) {
        View view = LayoutInflater.from(context).inflate(R.layout.adapter_item, viewGroup, false);
        ItensViewHolder holder = new ItensViewHolder(view);
        return holder;
    }

    @Override
    public void onBindViewHolder(final ItensViewHolder holder, final int position) {
        // Atualiza a view
        Item item = itens.get(position);
        holder.tvItemNome.setText(item.getNome());
        holder.tvItemDescricao.setText(item.getProduto().getDescricao());
        holder.tvItemPreco.setText("R$ " + item.getPrecoSugerido());
        holder.tvItemQuantidade.setText(item.getQtde().toString());
        holder.tvItemTotalComDesc.setText("R$ " + item.getTotalComDesconto().toString());
        holder.tvItemTotalSemDesc.setText("R$ " + item.getTotalSemDesconto().toString());
        holder.tvItemDesconto.setText("R$" + item.getDesconto().toString());
        holder.tvProdutoID.setText(" - Cod: " + item.getProduto().getId());

        //holder.progress.setVisibility(View.VISIBLE);
        // Faz o download da foto e mostra o ProgressBar
//        Picasso.with(context).load(item.getProduto().getUrlFoto()).fit().into(holder.img,
//                new com.squareup.picasso.Callback() {
//                    @Override
//                    public void onSuccess() {
//                        holder.progress.setVisibility(View.GONE); // download ok
//                    }
//
//                    @Override
//                    public void onError() {
//                        holder.progress.setVisibility(View.GONE);
//                    }
//                });
        // Click curto
        if (itemOnClickListener != null) {
            holder.itemView.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    itemOnClickListener.onClickItem(holder.itemView, position);
                }
            });
        }

        // Click longo
        holder.itemView.setOnCreateContextMenuListener(new View.OnCreateContextMenuListener() {
            @Override
            public void onCreateContextMenu(ContextMenu menu, View v, ContextMenu.ContextMenuInfo menuInfo) {

                MenuItem excluir = menu.add("Excluir");
                MenuItem editar  = menu.add("Editar");

                //Tela de detalhes do cliente.
                excluir.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {
                    @Override
                    public boolean onMenuItemClick(MenuItem item) {
                        itemOnClickListener.onLongClickItem(holder.itemView,position,"excluir");
                        return false;
                    }
                });

                //Tela de detalhes do cliente.
                editar.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {
                    @Override
                    public boolean onMenuItemClick(MenuItem item) {
                        itemOnClickListener.onLongClickItem(holder.itemView,position,"editar");
                        return false;
                    }
                });
            }
        });
    }

    public interface ItemOnClickListener {
        public void onClickItem(View view, int idx);
        public void onLongClickItem (View view, int idx,String menu);
    }

    // ViewHolder com as views
    public static class ItensViewHolder extends RecyclerView.ViewHolder {
        public TextView tvItemNome;
        public TextView tvItemDescricao;
        public TextView tvItemPreco;
        public TextView tvItemQuantidade;
        public TextView tvItemTotalSemDesc;
        public TextView tvItemTotalComDesc;
        public TextView tvItemDesconto;
        public TextView tvProdutoID;
        public CardView cardView;

        //ImageView img;
        //ProgressBar progress;

        public ItensViewHolder(View view) {
            super(view);
            // Cria as views para salvar no ViewHolder
            //img = (ImageView) view.findViewById(R.id.img_item);
            //progress = (ProgressBar) view.findViewById(R.id.progressImg_item);
            tvItemNome = (TextView) view.findViewById(R.id.tvItemNome);
            tvItemDescricao = (TextView) view.findViewById(R.id.tvItemDescricao);
            tvItemPreco = (TextView) view.findViewById(R.id.tvItemPreco);
            tvItemQuantidade = (TextView) view.findViewById(R.id.tvItemQuantidade);
            tvItemTotalSemDesc = (TextView) view.findViewById(R.id.tvItemTotalSemDesc);
            tvItemTotalComDesc = (TextView) view.findViewById(R.id.tvItemTotalComDesc);
            tvItemDesconto  =   (TextView) view.findViewById(R.id.tvItemDesconto);
            tvProdutoID =   (TextView) view.findViewById(R.id.tvProdutoID);
            cardView = (CardView) view.findViewById(R.id.card_view_item);
        }
    }

}